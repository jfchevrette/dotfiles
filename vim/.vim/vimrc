" Bootstrap vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" sensible defaults
Plug 'tpope/vim-sensible'

" ui/color
Plug 'joshdick/onedark.vim'
Plug 'arcticicestudio/nord-vim'
Plug 'vim-airline/vim-airline'
Plug 'scrooloose/nerdtree'

" start page
Plug 'mhinz/vim-startify'

" Languages
Plug 'fatih/vim-go'

" utils
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'ConradIrwin/vim-bracketed-paste'

call plug#end() 

" ================
" =   Settings   =
" ================

set hlsearch                 " Highlight search results
set ignorecase		     " Search is case insensitive

set noerrorbells             " No beeps

set number                   " Show line numbers
set relativenumber           " Show relative line numbers

set nobackup                 " Don't create annoying backup files
set noswapfile               " Don't use swapfile
set autowrite                " Automatically save before switching buffer

set splitright               " Split vertical to the right
set splitbelow               " split horizontal down

set cursorline               " Dont show the line the cursor is on

set completeopt=menuone,longest,noinsert,noselect,popup " Autocomplete menu on insert mode
set pumheight=10             " Completion indow max items

set termguicolors
let g:onedark_hide_endofbuffer=1
let g:onedark_terminal_italics=1
let g:onedark_color_overrides = {
\ "black": {"gui": "#1E2127", "cterm": "235", "cterm16": "0" },
\}
colorscheme nord

" ================
" =   Mappings   =
" ================

" use a mapleader variable 
let   mapleader = ","
let g:mapleader = ","

" center the screen
nnoremap <space> zz

" better split management
nnoremap <C-H> :call WinMove('h')<CR>
nnoremap <C-J> :call WinMove('j')<CR>
nnoremap <C-K> :call WinMove('k')<CR>
nnoremap <C-L> :call WinMove('l')<CR>
nnoremap <C-X> :hide<CR>
nnoremap <leader>x :hide<CR>
nnoremap <leader>o :only<CR>
function! WinMove(key)
  let t:curwin = winnr()
  exec "wincmd ".a:key
  if (t:curwin == winnr()) "we havent moved
    if (match(a:key,'[jk]')) "were we going up/down
      wincmd v
    else
      wincmd s
    endif
    exec "wincmd ".a:key
  endif
endfunction

" omnicomplete - pressing enter to select an item
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" ======================
" =   Plugin configs   =
" ======================

" Vim-Airline
let g:hybrid_reduced_contrast = 1

" ===== vim-go =====
let g:go_fmt_command = "goimports"
let g:go_auto_type_info = 1
augroup gocmds
  au!
  autocmd FileType go nmap <buffer> <Leader>s  <Plug>(go-def-split)
  autocmd FileType go nmap <buffer> <Leader>v  <Plug>(go-def-vertical)
  autocmd FileType go nmap <buffer> <Leader>i  <Plug>(go-info)
  autocmd FileType go nmap <buffer> <Leader>l  <Plug>(go-metalinter)
  autocmd FileType go nmap <buffer> <leader>r  <Plug>(go-run)
  autocmd FileType go nmap <buffer> <leader>b  :<C-u>call <SID>build_go_files()<CR>
  autocmd FileType go nmap <buffer> <leader>c  <Plug>(go-coverage-toggle)
  autocmd FileType go nmap <buffer> <leader>t  <Plug>(go-test)
  autocmd FileType go nmap <buffer> <Leader>d  <Plug>(go-doc)
augroup END

" ===== NERDTree =====
noremap <Leader>n :NERDTreeToggle<cr>
let NERDTreeMinimalUI=1

" ====================
" =   Autocommands   =
" ====================
"
" Only show cursorline in the current window and in normal mode
augroup cursorline
  au!
  au WinLeave,InsertEnter * set nocursorline
  au WinEnter,InsertLeave * set cursorline
augroup END

" open help vertically
augroup verticalhelp
  au!
  command! -nargs=* -complete=help Help vertical belowright help <args>
  autocmd FileType help wincmd L
  autocmd FileType help setlocal nohidden
augroup END

augroup misc_stuff
  " cd into the file directory on enter
  autocmd BufEnter * silent! lcd %:p:h

  " Buffers/Files events
  autocmd BufNewFile,BufRead *.go   setlocal noet ts=4 sw=4 sts=4
  autocmd BufNewFile,BufRead *.vim  setlocal noet ts=2 sw=2 sts=2
  autocmd BufNewFile,BufRead *.md   setlocal noet ts=4 sw=4
  autocmd FileType vim  setlocal noet ts=2 sw=2 sts=2
  autocmd FileType json setlocal   et ts=2 sw=2
  autocmd BufNewFile,BufRead .nginx.conf*,nginx.conf* setf nginx
augroup END
